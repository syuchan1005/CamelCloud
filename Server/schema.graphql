type User {
    userId: Int
    username: String
    password: String
    dirName: String
    twitterId: String
    facebookId: String
    instagramId: String
    createdAt: String
    updatedAt: String
}

type File {
    name: String
    type: FileType
}

enum FileType {
    FILE
    DIRECTORY
}

enum FileOperations {
    MKDIR
    RENAME
    # REMOVE = Move to Trash
    REMOVE
    # DELETE = Permanently delete
    DELETE
    MOVE
}

enum FolderType {
    TRASH
}

input UpdateUser {
    username: String
    password: String
    twitterId: Boolean = false
    facebookId: Boolean = false
    instagramId: Boolean = false
}

input OperateFile {
    op: FileOperations!
    path: String!
    source: String!
    target: String
}

type Query {
    getUser: User
    getFiles(path: String = "", fileType: FileType, folderType: FolderType): [File!]!
}

type Mutation {
    setUser(data: UpdateUser): User
    operateFile(data: OperateFile, fileType: FileType): [File!]!
}